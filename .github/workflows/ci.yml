name: ci

on:
  push:
    paths:
      - "**.hpp"
      - "**.cpp"
      - "**/meson.build"
      - "**/ci.yml"
  workflow_dispatch:
env:
    clang_version: "15"
    gcc_version: "12"

jobs:
  linux:
    strategy:
      matrix:
        compilers:
          - "clang"
          - "gcc"
        linker:
          - "lld"
        type:
          - "debug"
          - "release"

    runs-on : ubuntu-latest

    defaults:
        run:
          shell: bash
    steps:
    - name: Install base dependencies
      run: |
          sudo apt -y update
          sudo -H pip3 install --no-cache-dir --upgrade meson

    - name: Update Ninja
      run: |
        curl -L https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-linux.zip -o ninja-linux.zip
        sudo apt-get install unzip
        unzip ninja-linux.zip -d ninja
        sudo mv ninja/ninja /usr/bin/ninja
        sudo chmod +x /usr/bin/ninja
        ninja --version

    - name: Install lld
      if: ${{ startsWith(matrix.linker, 'lld')  }}
      run: |
          sudo apt -y install --no-install-recommends lld-${{ env.clang_version }}
          sudo update-alternatives --install /usr/bin/ld.lld ld.lld /usr/bin/ld.lld-${{ env.clang_version }} 1000

    - name: Install clang
      if: ${{ startsWith(matrix.compiler, 'clang')  }}
      run: |
          sudo apt -y install --no-install-recommends clang-${{ env.clang_version }}
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-${{ env.clang_version }} 1000
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-${{ env.clang_version }} 1000

    - name: Install gcc
      if: ${{ startsWith(matrix.compiler, 'gcc') }}
      run: |
          sudo apt -y install --no-install-recommends gcc-${{ env.gcc_version }} g++-${{ env.gcc_version }}
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${{ env.gcc_version }} 1000
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${{ env.gcc_version }} 1000

    - uses: actions/checkout@v3
      with:
          submodules: true

    - name: Configure Meson
      run: |
          CC=cc CXX=c++ CXX_LD=${{ matrix.linker }} meson setup build --buildtype=${{ matrix.type }} &&
          meson wrap install eigen

    - name: Build
      run: meson compile -C build --jobs -1

    - name: Test
      run: meson test -C build --verbose
